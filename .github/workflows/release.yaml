---
name: Release 🚀

# yamllint disable rule:truthy
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  package_waldiez_react:
    name: Package React 🌐 distribution 📦
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: |
          bun install

      - name: Build
        run: |
          bun run build
          bun run archive

      - name: Make docs
        run: |
          bun run docs

      - name: Move artifacts to dist
        run: |
          rm-rf dist && mkdir -p dist/react
          mv out/archive/* dist/react
          mv docs/reference/react dist/react/docs

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-react
          path: dist/react

  publish_waldiez_to_npm:
      name: Publish React 🌐 distribution 📦 to NPM
      runs-on: ubuntu-latest
      needs: package_waldiez_react
      steps:
        - uses: actions/checkout@v4

        - name: Setup bun
          uses: oven-sh/setup-bun@v2

        - name: Build and publish to NPM
          # publish only on new tags
          if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          run: |
            bun install
            bun clean
            bun build:lib
            bun publish

        - name: Dry-run publish to NPM
          if: github.event_name == 'workflow_dispatch'
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          run: |
            bun install
            bun clean
            bun build:lib
            bun publish --dry-run

  package_waldiez_python:
    runs-on: ubuntu-latest
    name: Package Python 🐍 distribution 📦
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: python -m pip install --break-system-packages build twine

      - name: Build 🏗️
        run: |
          mkdir -p dist/python
          python -m build --sdist --wheel --outdir dist/python
          python -m twine check dist/python/*

      - name: Download the react docs artifact
        uses: actions/download-artifact@v4
        with:
          name: waldiez-react
          path: dist/react

      - name: Make docs
        run: |
          mv dist/react/docs docs/reference/react
          python -m pip install --upgrade pip
          pip install -r requirements/main.txt -r requirements/dev.txt -r requirements/test.txt -r requirements/docs.txt
          python scripts/docs.py
          mv site dist/python/docs

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-python
          path: |
            dist/python

  publish_waldiez_to_pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    needs: package_waldiez_python
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/waldiez
    steps:
      - name: Download the artifact from the python package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-python
          path: dist/python

      - name: List the distribution packages
        run: |
          ls -la dist/python

      - name: Publish distribution 📦 to PyPI
        # publish only on new tags
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir:
            dist/python

  release:
    runs-on: ubuntu-latest
    name: Release 🚀
    needs:
      - publish_waldiez_to_npm
      - publish_waldiez_to_pypi
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact from react package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-react
          path: dist/react

      - name: Download artifact from python package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-python
          path: dist/python

      - name: Make docs archive
        run: |
          tar -czf dist/waldiez/docs.tar.gz dist/python/docs

      - name: Sign with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            dist/waldiez/docs.tar.gz
            dist/python/*.whl
            dist/python/*.tar.gz
            dist/react/*.tgz

      - name: Read changelog
        id: changelog
        run: |
          changelog=$(bun run changelog)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get Tag Name
        id: tag_name
        run: |
          tag_name="v$(jq -r .version package.json | xargs)"
          echo "tag_name<<EOF" >> $GITHUB_OUTPUT
          echo "$tag_name" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create a release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && steps.changelog.outputs.changelog != '' && steps.tag_name.outputs.tag_name != ''
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create "${{ steps.tag_name.outputs.tag_name }}" \
            --title '${{ steps.tag_name.outputs.tag_name }}' \
            --notes '${{ steps.changelog.outputs.changelog }}'

      - name: Upload artifacts and signatures to GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && steps.changelog.outputs.changelog != '' && steps.tag_name.outputs.tag_name != ''
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload "${{ steps.tag_name.outputs.tag_name }}" \
            dist/**/*.tar.gz \
            dist/**/*.tar.gz.sigstore.json \
            dist/**/*.whl \
            dist/**/*.whl.sigstore.json \
            dist/**/*.tgz \
            dist/**/*.tgz.sigstore.json \
            --clobber \
            --repo '${{ github.repository }}'

      # if on dispatch let's just upload the artifacts
      - name: Store artifacts
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: waldiez
          path: dist
