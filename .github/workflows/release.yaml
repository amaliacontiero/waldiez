---
name: Release üöÄ

# on tags: publish core packags
# on dispatch (after publising core packages):
# (bump and) publish other packages

# yamllint disable rule:truthy
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write


jobs:
  package_waldiez_react:
    name: Package React üåê distribution üì¶
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: |
          cd packages/core/react
          bun install

      - name: Build
        run: |
          cd packages/core/react
          bun run build

      - name: Make docs
        run: |
          cd packages/core/react
          bun run docs

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-react
          path: |
            packages/core/react/dist
            packages/core/react/out
            packages/core/react/site

  publish_waldiez_to_npm:
    name: Publish React üåê distribution üì¶ to NPM
    runs-on: ubuntu-latest
    needs: package_waldiez_react
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: |
          cd packages/core/react
          bun install

      - name: Download the artifact from the react package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-react
          path: out/archive/waldiez-react-*.tgz

      - name: Publish to NPM
        # publish only on new tags
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd packages/core/react
          bun install
          bun clean
          bun build:lib
          bun publish

  package_waldiez_python:
    runs-on: ubuntu-latest
    name: Package Python üêç distribution üì¶
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: python -m pip install --break-system-packages build twine

      - name: Build üèóÔ∏è
        run: |
          cd packages/core/python
          python -m build --sdist --wheel --outdir dist/
          python -m twine check dist/*

      - name: Make docs
        run: |
          cd packages/core/python
          python scripts/docs.py

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-python
          path: |
            packages/core/python/dist
            packages/core/python/site

  publish_waldiez_to_pypi:
    name: >-
      Publish Python üêç distribution üì¶ to PyPI
    needs: package_waldiez_python
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/waldiez
    steps:
      - name: Download the artifact from the python package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-python
          path: packages/core/python/

      - name: Publish distribution üì¶ to PyPI
        # publish only on new tags
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir:
            packages/core/python/dist/

  # On Dispatch
  # manually trigger the actions (after publishing the core packages)
  publish_waldiez_vscode:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Publish VSCode üåê distribution üì¶ to Marketplace
    needs:
      - publish_waldiez_to_npm
      - publish_waldiez_to_pypi
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: patch package.json
        run: |
          bun install
          bun run ci:patch

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install corepack and yarn
        run: |
          corepack enable
          yarn set version stable

      - name: Rollback package.json
        run: |
          bun run ci:rollback

      - name: Install dependencies
        run: |
          cd packages/vscode
          yarn install

      - name: Create VSIX
        id: create_vsix
        run: |
          cd packages/vscode
          yarn cache clean
          yarn install
          yarn run build
          echo "generated<<EOF" >> $GITHUB_OUTPUT
          echo "$(ls -1 dist/waldiez-vscode-*.vsix)" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload the distribution package
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-vscode
          path: packages/vscode/dist/

      - name: Publish to VSCode Marketplace
        # tmp to disable (on dispatch):
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: |
          cd packages/vscode
          yarn run deploy
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

  package_waldiez_jupyter:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Package Jupyter üêç distribution üì¶
    needs:
      - publish_waldiez_to_npm
      - publish_waldiez_to_pypi

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: patch package.json
        run: |
          bun install
          bun run ci:patch

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install corepack and yarn
        run: |
          corepack enable
          yarn set version stable

      - name: Rollback package.json
        run: |
          bun run ci:rollback

      - name: Install dependencies
        run: |
          cd packages/jupyter
          yarn install
          python -m pip install --break-system-packages jupyterlab build twine

      - name: Build the package with the latest version of @waldiez/react and waldiez
        run: |
          cd packages/jupyter
          yarn cache clean
          yarn install
          yarn build
          python scripts/build.py

      - name: Store the distribution package
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-jupyter
          path: packages/jupyter/dist/

  publish_waldiez_jupyter:
    if: github.event_name == 'workflow_dispatch'
    name: Publish Jupyter üêç distribution üì¶ to PyPI
    needs: package_waldiez_jupyter
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/waldiez-jupyter
    steps:
      - name: Download artifact from the python package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-jupyter
          path: packages/jupyter/dist/

      - name: Publish to PyPI
        # tmp to disable (on dispatch):
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir:
            packages/jupyter/dist/

  package_waldiez_studio:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Package Studio üêç distribution üì¶
    needs:
      - publish_waldiez_to_npm
      - publish_waldiez_to_pypi

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: |
          cd packages/studio
          bun install
          python -m pip install --break-system-packages build twine

      - name: Build the package
        run: |
          cd packages/studio
          bun install
          bun run build
          python scripts/build.py

      - name: Store the distribution package
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-studio
          path: packages/studio/dist/

  publish_waldiez_studio:
    if: github.event_name == 'workflow_dispatch'
    name: Publish Studio üêç distribution üì¶ to PyPI
    needs: package_waldiez_studio
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/waldiez-studio
    steps:
      - name: Download the artifact from the python package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-studio
          path: packages/studio/dist/

      - name: Publish to PyPI
        # tmp to disable (on dispatch):
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir:
            packages/studio/dist/

  release:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Release üöÄ
    needs:
      - publish_waldiez_vscode
      - publish_waldiez_jupyter
      - publish_waldiez_studio
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Download artifact from react package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-react
          path: dist/core/react/

      - name: Download artifact from python package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-python
          path: dist/core/python/

      - name: Download artifact from vscode package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-vscode
          path: dist/vscode/

      - name: Download artifact from jupyter package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-jupyter
          path: dist/jupyter/

      - name: Download artifact from studio package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-studio
          path: dist/studio/

      - name: Rename site to docs
        run: |
          mv dist/core/python/site dist/core/python/docs
          mv dist/core/react/site dist/core/react/docs

      - name: Sign the python dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            dist/core/python/dist/*.tar.gz
            dist/core/python/dist/*.whl
            dist/jupyter/*.tar.gz
            dist/jupyter/*.whl
            dist/studio/*.tar.gz
            dist/studio/*.whl

      - name: Read changelog
        id: changelog
        run: |
          changelog=$(bun run changelog)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get Tag Name
        id: tag_name
        run: |
          tag_name="v$(jq -r .version package.json | xargs)"
          echo "tag_name<<EOF" >> $GITHUB_OUTPUT
          echo "$tag_name" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create a release
        if: steps.changelog.outputs.changelog != '' && steps.tag_name.outputs.tag_name != ''
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create "${{ steps.tag_name.outputs.tag_name }}" \
            --title '${{ steps.tag_name.outputs.tag_name }}' \
            --notes '${{ steps.changelog.outputs.changelog }}'

      - name: Upload artifact signatures to GitHub Release
        if: steps.changelog.outputs.changelog != '' && steps.tag_name.outputs.tag_name != ''
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload '${{ steps.tag_name.outputs.tag_name }}' dist/** --repo '${{ github.repository }}'
