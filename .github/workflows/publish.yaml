---
# WIP
name: Publish Packages to npm and PyPI

# yamllint disable rule:truthy
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    branches:
      - monorepo

permissions:
  contents: write
  packages: write
  id-token: write


jobs:
  package_waldiez_react:
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    if: github.event_name == 'push' && github.ref_name == 'monorepo'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: |
          cd packages/core/react
          bun install
      - name: Build
        run: |
          cd packages/core/react
          bun run build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-react-package-distribution
          path: packages/core/react/dist/

  publish_waldiez_to_npm:
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    if: github.event_name == 'push' && github.ref_name == 'monorepo'
    runs-on: ubuntu-latest
    needs: package_waldiez_react
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: |
          cd packages/core/react
          bun install

      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: waldiez-react-package-distribution
          path: packages/core/react/dist/

          # - name: Publish to NPM
          #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
          #   env:
          #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          #   run: |
          #     cd packages/core/react
          #     bun publish

  package_waldiez_python:
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    if: github.event_name == 'push' && github.ref_name == 'monorepo'
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: python -m pip install --break-system-packages build twine

      - name: Build 🏗️
        run: |
          cd packages/core/python
          python -m build --sdist --wheel --outdir dist/
          python -m twine check dist/*

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-python-package-distribution
          path: packages/core/python/dist/

  publish_waldiez_to_pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    if: github.event_name == 'push' && github.ref_name == 'monorepo'
    needs: package_waldiez_python
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/waldiez
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: waldiez-python-package-distribution
          path: packages/core/python/dist/

          # - name: Publish distribution 📦 to PyPI
          # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
          #   uses: pypa/gh-action-pypi-publish@release/v1
          #   with:
          #     packages-dir:
          #       packages/core/python/dist/

  publish_waldiez_vscode:
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    if: github.event_name == 'push' && github.ref_name == 'monorepo'
    needs: package_waldiez_react
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: patch package.json
        run: |
          bun install
          bun run ci:patch

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install corepack and yarn
        run: |
          corepack enable
          yarn set version stable

      - name: Rollback package.json
        run: |
          bun run ci:rollback

      - name: Install dependencies
        run: |
          cd packages/vscode
          yarn install

      - name: Download artifact from react package
        uses: actions/download-artifact@v4
        with:
          name: waldeiz-react-package-distribution
          path: packages/core/react/dist/

      - name: Get the new version of the package
        run: |
          sudo update && sudo apt install -y jq
          mkdir -p .local
          cat package.json | jq -r '.version' > .local/VERSION
          cd packages/vscode
          mkdir -p .local
          mv ../../.local/VERSION .local/VERSION
          cat package.json | jq -r '.version' > .local/VERSION

      - name: Set the new version of @waldiez/react to the path of the artifact
        run: |
          cd packages/vscode
          touch yarn.lock
          yarn version:set $(cat .local/VERSION)
          yarn remove @waldiez/react
          yarn add @waldiez/react@file:../../react/dist/waldiez-react-$(cat .local/VERSION).tgz
          yarn install

      - name: Create VSIX
        id: create_vsix
        run: |
          cd packages/vscode
          yarn run build
          echo "generated<<EOF" >> $GITHUB_OUTPUT
          echo "$(ls -1 dist/waldiez-vscode-*.vsix)" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload the distribution package
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-vscode-package-distribution
          path: packages/vscode/dist/

          # - name: Publish to VSCode Marketplace
          #   if: success() && steps.create_vsix.outputs.generated && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
          #   run: |
          #     cd packages/vscode
          #     yarn run deploy
          #   env:
          #     VSCE_PAT: ${{ secrets.VSCE_PAT }}

  package_waldiez_jupyter:
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    if: github.event_name == 'push' && github.ref_name == 'monorepo'
    needs:
      - package_waldiez_react
      - package_waldiez_python

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: patch package.json
        run: |
          bun install
          bun run ci:patch

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install corepack and yarn
        run: |
          corepack enable
          yarn set version stable

      - name: Rollback package.json
        run: |
          bun run ci:rollback

      - name: Install dependencies
        run: |
          cd packages/jupyter
          yarn install

      - name: Download artifact from python package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-python-package-distribution
          path: packages/core/python/dist/

      - name: Download artifact from react package
        uses: actions/download-artifact@v4
        with:
          name: waldeiz-react-package-distribution

      - name: Get the new version of the package
        run: |
          sudo update && sudo apt install -y jq
          mkdir -p .local
          cat package.json | jq -r '.version' > .local/VERSION
          cd packages/jupyter
          mkdir -p .local
          mv ../../.local/VERSION .local/VERSION
          cat package.json | jq -r '.version' > .local/VERSION

      - name: Set the new @waldiez/react to the path of the artifact
        run: |
          cd packages/jupyter
          yarn version:set $(cat .local/VERSION)
          yarn remove @waldiez/react
          yarn add @waldiez/react@file:../../react/dist/waldiez-react-$(cat .local/VERSION).tgz
          yarn install

      - name: Set and install the new waldiez py version to the path of the artifact
        run: |
          cd packages/jupyter
          pip install ../../python/dist/waldiez-$(cat .local/VERSION)-py3-none-any.whl
          python scripts/version.py --set $(cat .local/VERSION)

      - name: Build the frontend part of the extension
        run: |
          cd packages/jupyter
          yarn build

        # TBC
