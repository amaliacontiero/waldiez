---
name: Setup

# yamllint disable rule:truthy
on:
  workflow_call:
    inputs:
      python-version:
        description: "Python version to use"
        required: true
        type: string
      os:
        description: "Operating system to use"
        required: true
        type: string
env:
  BUN_VERSION: "bun@1.1.42"
  YARN_VERSION: "yarn@4.5.3"

jobs:
  setup:
    runs-on:
      ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Temporarily switch package manager to Yarn
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            powershell -Command "(Get-Content package.json) -replace '\"packageManager\":\\s*\"[^\"]+\"', '\"packageManager\": \"${{ env.YARN_VERSION }}\"' | Set-Content package.json"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            sed -i '' -E 's/"packageManager":\s*"[^"]*"/"packageManager": \"${{ env.YARN_VERSION }}\"/' package.json
          else
            sed -i.bak -E 's/"packageManager":\s*"[^"]*"/"packageManager": \"${{ env.YARN_VERSION }}\"/' package.json
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install corepack and yarn
        run: |
          corepack enable
          yarn set version stable

      - name: Revert package manager to Bun
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            powershell -Command "(Get-Content package.json) -replace '\"packageManager\":\\s*\"[^\"]+\"', '\"packageManager\": \"${{ env.BUN_VERSION }}\"' | Set-Content package.json"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            sed -i '' -E 's/"packageManager":\s*"[^"]*"/"packageManager": \"${{ env.BUN_VERSION }}\"/' package.json
          else
            mv package.json.bak package.json
          fi
      - name: Setup bun
        uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        run: |
          bun install
          bun run requirements:ts
          pip install --upgrade pip uv
          uv sync --all-packages
