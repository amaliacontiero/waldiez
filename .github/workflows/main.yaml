---
name: Lint, test, and deploy

# yamllint disable rule:truthy
on:
  push:
    branches:
      - main
  pull_request:


permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/main.txt -r requirements/dev.txt -r requirements/test.txt
      - name: pylint
        run: pylint --rcfile=pyproject.toml .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/main.txt -r requirements/dev.txt -r requirements/test.txt
          python -m pytest \
            -c pyproject.toml \
            --cov=waldiez \
            --cov-report=term-missing:skip-covered \
            --cov-report html:reports/html \
            --cov-report xml:reports/coverage.xml \
            --cov-report lcov:reports/lcov.info \
            --junitxml=reports/xunit.xml \
            tests/
      - name: Report to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./reports/lcov.info

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - run: pip install -r requirements/docs.txt -r requirements/main.txt
      - run: mkdocs gh-deploy --config-file mkdocs.yml --force

  deploy-docs:
    needs: build-docs
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: gh-pages
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
