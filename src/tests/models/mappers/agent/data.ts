/**
 * SPDX-License-Identifier: Apache-2.0
 * Copyright 2024 - 2025 Waldiez & contributors
 */
import { defaultRetrieveConfig } from "@waldiez/models/Agent";

export const userJson = {
    id: "wa-1",
    type: "agent",
    name: "user_proxy",
    description: "New user",
    agentType: "user_proxy",
    tags: [],
    requirements: [],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    data: {
        humanInputMode: "ALWAYS",
        systemMessage: null,
        codeExecutionConfig: false,
        agentDefaultAutoReply: null,
        maxConsecutiveAutoReply: null,
        termination: {
            type: "none",
            keywords: [],
            criterion: null,
            methodContent: null,
        },
        modelId: null,
        tools: [],
        parentId: undefined,
        nestedChats: [],
    },
    position: { x: 10, y: 11 },
};

export const assistantJson = {
    id: "assistant",
    type: "agent",
    agentType: "assistant",
    name: "Assistant",
    description: "New assistant",
    tags: ["tag1"],
    requirements: ["requirement1"],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    data: {
        humanInputMode: "NEVER",
        systemMessage: null,
        codeExecutionConfig: false,
        agentDefaultAutoReply: null,
        maxConsecutiveAutoReply: null,
        termination: {
            type: "none",
            keywords: [],
            criterion: null,
            methodContent: null,
        },
        modelId: null,
        tools: [],
        parentId: undefined,
        nestedChats: [],
        isMultimodal: false,
    },
    position: { x: 20, y: 21 },
};

export const ragUserJson = {
    id: "ragUser",
    type: "agent",
    agentType: "rag_user_proxy",
    name: "Rag User",
    description: "A rag user agent",
    tags: [],
    requirements: [],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    data: {
        humanInputMode: "ALWAYS",
        systemMessage: null,
        codeExecutionConfig: false,
        agentDefaultAutoReply: null,
        maxConsecutiveAutoReply: null,
        termination: {
            type: "none",
            keywords: [],
            criterion: null,
            methodContent: null,
        },
        modelId: null,
        tools: [],
        parentId: undefined,
        nestedChats: [],
        retrieveConfig: defaultRetrieveConfig,
    },
    key: "value",
    position: { x: 40, y: 41 },
};

export const captainJson = {
    id: "captain",
    type: "agent",
    agentType: "captain",
    name: "Captain",
    description: "A captain agent",
    tags: [],
    requirements: [],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    data: {
        humanInputMode: "NEVER",
        systemMessage: null,
        codeExecutionConfig: false,
        agentDefaultAutoReply: null,
        maxConsecutiveAutoReply: null,
        termination: {
            type: "none",
            keywords: [],
            criterion: null,
            methodContent: null,
        },
        modelId: null,
        tools: [],
        parentId: undefined,
        nestedChats: [],
        agentLib: [],
        toolLib: null,
        maxRound: 10,
        maxTurns: 5,
    },
    key: "value",
    position: { x: 70, y: 71 },
};
